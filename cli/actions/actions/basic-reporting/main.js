const mrMarkdownBuilder = require('mr_markdown_builder')

function createMainReport (inputs) {
    const ACTION_WARNING = `**Notice:** This page is automatically generated by the custom GitHub action \`basic-reporting\`. It is scheduled to run at 12:00 AM everyday and will update \`README.md\` files in the \`/Companies\` directory, generate a \`<company-name>.md\` file for each company in the \`/Companies\` directory, and update the main \`README.md\` file in the root of the repository.  Manual updates to these files are not recommended as they will be overwritten the next time the action runs.\n`
    
    // Loop through all of the inputs.companies to find the one company with the role of "Owner"
    const owner = inputs.companies.find((company) => company.role === 'Owner')
    // Create the owner logo
    const ownerLogo = mrMarkdownBuilder.imageWithSize(`${owner.name} Logo`, owner.logo_url, 25, owner.name)

    // Create the main report
    let readme = mrMarkdownBuilder.h1(`${ownerLogo} Product and Service Discovery Repository for ${owner.name}`)
    readme += `Welcome to your discovery repository meant to help you build products and services via an evidence based approach.  Presently, the repository contains \`${inputs.companies.length}\` companies and \`${inputs.interactions.length}\` interactions. This repository means to be the warehouse for all evidence needed to generate the why\'s and what\'s for your product or service plans.  It is intentionally integrated into GitHub to help you leverage the power of GitHub's ecosystem.`

    // Create a paragraph about companies, the title should be h2 and contain a link to the Companies/README.md file
    readme += mrMarkdownBuilder.h2(`Companies [${mrMarkdownBuilder.link('View Companies', './Companies/README.md')}]`)
    readme += `Companies are presently the primary object used and the repository contains \`${inputs.companies.length}\` of them.  This means you'll be able to find information about these companies in the repository.  Each company has a profile page containing information about the company including its name, description, industry, and location.  Additionally, each company has a list of interactions that are linked to it.`

    // Create a paragraph about interactions, the title should be h2 and not contain a link to the Interactions/README.md file
    readme += mrMarkdownBuilder.h2(`Interactions`)
    readme += `Interaction objects are essentially content related to a company.  They can include meeting notes, emails, product documentation, blog posts, audio transcripts, and more.  While each interaction is linked to a company access to the interaction is presented handled by the company that owns it.`

    readme += mrMarkdownBuilder.h2(`Studies [${mrMarkdownBuilder.link('View Studies', './Studies/README.md')}]`)
    readme += `The first implementation of studies is available via the \`Foundation\` study.  The \`Foundation\` study includes all Companies, and their associated Interactions, building atop the analysis that Caffeine performed on Interactions data.  To initialize the \`Foundation\` study please run \`mrcli study --init_foundation\` and then reach out to your Mediumroast team via ${mrMarkdownBuilder.link('Discord', 'https://discord.gg/ebM4Cf8meK')} or email us at ${mrMarkdownBuilder.link('hello@mediumroast.io', 'mailto:hello@mediumroast.io')}. Note that activating studies requires a professional services engagement with your Mediumroast crew. Finally, support for user defined studies will come in a future release.\n`

    readme += mrMarkdownBuilder.h2('Navigation and Modification')  
    readme +=`Direct navigation and modifcation of repository contents is not recommended. Instead this README file, and accompanying markdown files, will guide you through its contents.  Additionally, the open source node module and CLI \`mediumroast_js\` [${mrMarkdownBuilder.link('GitHub', 'https://github.com/mediumroast/mediumroast_js')}, ${mrMarkdownBuilder.link('NPM', 'https://www.npmjs.com/package/mediumroast_js')}] can be used to create, update, and delete content in the repository.`

    // Add the notice
    readme += mrMarkdownBuilder.h2('Notice')
    readme += ACTION_WARNING

    // Create a paragraph that focuses on listing the active workflows and their last status
    readme += mrMarkdownBuilder.h2('Workflows')
    // Get the current month and year and put them in a single string
    const date = new Date()
    const month = date.toLocaleString('default', { month: 'long' })
    const year = date.getFullYear()

    readme += `The repository contains \`2\` active workflows. As of \`${month}-${year}\` \`${inputs.workflows.runTime} minutes\` have been consumed. A GitHub free plan has \`2000 minutes\` available per month meaning there is \`${2000 - inputs.workflows.runTime}\` remaining minutes for the month. Assuming a repository with 10s of company objects, each workflow runs about a minute at midnight everyday. A good estimate for how many minutes are typically consumed in a month is 2 workflows/day x 1 min/workflow x 30 days/month or \`${2*1*30} min/month\`. To get an accurate view of your consumed minutes for your planning please run \`mrcli actions\`. The statuses of five most recent workflow runs are provided below, links are included to enable more information on the workflows.\n`
    // Create the table header
    const workflowTableHeader = mrMarkdownBuilder.tableHeader(['Workflow Name', 'Last Status', 'Run Time Message', 'Run Time'])
    // Create the table rows
    const myWorkflows = inputs.workflows.allWorkFlows.slice(1, 6)
    const workflowTableRows = myWorkflows.map((workflow) => {
        const workflowRow = [
            mrMarkdownBuilder.link(workflow.name, `./.github/workflows/${workflow.name}.yml`),
            mrMarkdownBuilder.link(workflow.conclusion, workflow.html_url),
            workflow.run_time_name,
            `${workflow.run_time_minutes} minute(s)`
        ]
        return workflowRow
    })
    // Create the table
    const workflowTable = workflowTableHeader + "\n" + mrMarkdownBuilder.tableRows(workflowTableRows)
    // Add the table to the README.md file
    readme += workflowTable

    // Add a line break
    readme += "\n"

    // Create a paragraph that lists the branches and their last commit
    readme += mrMarkdownBuilder.h2('Branches')
    readme += `The repository contains \`${inputs.branches.length}\` branches.  The last commit of each branch is listed below.  Click on the branch name to view the branch.\n`
    // Create the table header
    const branchTableHeader = mrMarkdownBuilder.tableHeader(['Branch Name', 'Commit Author', 'Commit Date', 'Last Commit Message'])
    // Create the table rows
    const branchTableRows = inputs.branches.map((branch) => {
        const branchRow = [
            mrMarkdownBuilder.link(branch.name, `./tree/${branch.name}`),
            branch.author,
            branch.date,
            branch.last_commit
        ]
        return branchRow
    })
    // Create the table
    const branchTable = branchTableHeader + "\n" + mrMarkdownBuilder.tableRows(branchTableRows)
    // Add the table to the README.md file
    readme += branchTable
    
    // Return the report content
    return readme
}

module.exports = {
    createMainReport
}